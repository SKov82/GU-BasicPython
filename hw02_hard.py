
__author__ = 'Ковригин Сергей Владимирович'

# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.

f = 'y = -12x + 11111140.2121'
x = 2.5
# вычислите и выведите y

# Вариант 1
y = f.replace('x', ' * x').replace('y = ', '')
print(eval(y))

# Вариант 2
y = f.split(' ')
y = float(y[2][:-1]) * x + float(y[-1])
print(y)

# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
date_true = ('01.11.1985', '02.11.2013', '28.02.1999', '30.08.2019')

# Примеры некорректных дат
date_false = ('01.22.1001', '1.12.1001', '-2.10.3001', '29.02.2018', 'sdfv')


import re
from datetime import date

reg = re.compile('\d\d\.\d\d\.\d{4}')


def check(dt):
    dat = dt.split('.')
    try:
        date(int(dat[2]), int(dat[1]), int(dat[0]))
        print(dt, '{}'.format('OK' if re.match(reg, dt) else 'Ошибка'))
    except:
        print(dt, 'Ошибка')


for dt in date_true:
    check(dt)
for dt in date_false:
    check(dt)

# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты,
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

N = 13  # Задайте номер искомой комнаты


def search(N):
    room = 1
    floor = 1
    block = 1
    while room <= 2000000000:
        for y in range(block):
            for x in range(block):
                if N == room:
                    print(floor, x + 1)
                    return
                room += 1
            floor += 1
        block += 1


search(N)
